{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport authReducer from '../slicefile/authSlice';\nconst loadState = () => {\n  try {\n    const reduxData = localStorage.getItem('reduxState');\n    if (reduxData == null) {\n      return undefined;\n    }\n    return JSON.parse(reduxData);\n  } catch (err) {\n    return undefined;\n  }\n};\nconst saveState = state => {\n  try {\n    const reduxData = JSON.stringify(state);\n    localStorage.setItem('reduxState', reduxData);\n  } catch (err) {\n    console.log(\"store.js error\", err);\n  }\n};\nconst initialState = loadState() || {\n  auth: {\n    isAuthenticated: false,\n    data: null,\n    accessToken: null,\n    refreshToken: null\n  }\n};\nconst store = configureStore({\n  reducer: {\n    auth: authReducer\n  },\n  preloadedState: initialState // Add preloadedState to configureStore\n});\nstore.subscribe(() => {\n  saveState(store.getState());\n});\nexport { store };","map":{"version":3,"names":["configureStore","authReducer","loadState","reduxData","localStorage","getItem","undefined","JSON","parse","err","saveState","state","stringify","setItem","console","log","initialState","auth","isAuthenticated","data","accessToken","refreshToken","store","reducer","preloadedState","subscribe","getState"],"sources":["E:/learning/django auth/frontend/src/storefile/store.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport authReducer from '../slicefile/authSlice'\r\n\r\nconst loadState = () => {\r\n  try {\r\n    const reduxData = localStorage.getItem('reduxState')\r\n    if (reduxData == null) {\r\n      return undefined\r\n    }\r\n    return JSON.parse(reduxData)\r\n  }\r\n  catch (err) {\r\n    return undefined\r\n  }\r\n}\r\n\r\nconst saveState = (state) => {\r\n  try {\r\n    const reduxData = JSON.stringify(state);\r\n    localStorage.setItem('reduxState', reduxData);\r\n  }\r\n  catch (err) {\r\n    console.log(\"store.js error\", err)\r\n  }\r\n}\r\n\r\nconst initialState = loadState() || {\r\n  auth: {\r\n    isAuthenticated: false,\r\n    data: null,\r\n    accessToken: null,\r\n    refreshToken: null,\r\n  },\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: authReducer\r\n  },\r\n  preloadedState: initialState, // Add preloadedState to configureStore\r\n});\r\n\r\nstore.subscribe(() => {\r\n  saveState(store.getState());\r\n});\r\n\r\nexport { store }\r\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,WAAW,MAAM,wBAAwB;AAEhD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACtB,IAAI;IACF,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IACpD,IAAIF,SAAS,IAAI,IAAI,EAAE;MACrB,OAAOG,SAAS;IAClB;IACA,OAAOC,IAAI,CAACC,KAAK,CAACL,SAAS,CAAC;EAC9B,CAAC,CACD,OAAOM,GAAG,EAAE;IACV,OAAOH,SAAS;EAClB;AACF,CAAC;AAED,MAAMI,SAAS,GAAIC,KAAK,IAAK;EAC3B,IAAI;IACF,MAAMR,SAAS,GAAGI,IAAI,CAACK,SAAS,CAACD,KAAK,CAAC;IACvCP,YAAY,CAACS,OAAO,CAAC,YAAY,EAAEV,SAAS,CAAC;EAC/C,CAAC,CACD,OAAOM,GAAG,EAAE;IACVK,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEN,GAAG,CAAC;EACpC;AACF,CAAC;AAED,MAAMO,YAAY,GAAGd,SAAS,CAAC,CAAC,IAAI;EAClCe,IAAI,EAAE;IACJC,eAAe,EAAE,KAAK;IACtBC,IAAI,EAAE,IAAI;IACVC,WAAW,EAAE,IAAI;IACjBC,YAAY,EAAE;EAChB;AACF,CAAC;AAED,MAAMC,KAAK,GAAGtB,cAAc,CAAC;EAC3BuB,OAAO,EAAE;IACPN,IAAI,EAAEhB;EACR,CAAC;EACDuB,cAAc,EAAER,YAAY,CAAE;AAChC,CAAC,CAAC;AAEFM,KAAK,CAACG,SAAS,CAAC,MAAM;EACpBf,SAAS,CAACY,KAAK,CAACI,QAAQ,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC;AAEF,SAASJ,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}